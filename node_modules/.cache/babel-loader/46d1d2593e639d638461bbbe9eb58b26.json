{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Desktop/Hub3/hub3_take_home_challenge/hub3_take_home_challenge/src/components/search/Content.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Checkbox, Divider } from 'antd';\nimport Dogs from './Dogs';\nimport axios from 'axios';\nimport DogCard from './DogCard';\nconst CheckboxGroup = Checkbox.Group;\n\nconst Content = ({\n  selectedBreeds\n}) => {\n  const [filteredBreeds, setFilteredBreeds] = useState([]);\n  const [dogs, setDogs] = useState([]);\n  const [checkedList, setCheckedList] = useState([]);\n  const [indeterminate, setIndeterminate] = useState(true);\n  const [checkAll, setCheckAll] = useState(false);\n\n  const buildDogObjects = data => {\n    data.then(res => console.log(res));\n    return data.reduce((array, imgUrl) => {\n      const [url, breed, subbreed] = imgUrl.match(/.*\\/(\\w+)\\-?(\\w*)\\/.*$/);\n      const obj = {};\n      obj['breed'] = breed;\n      obj['subbreed'] = subbreed;\n      obj['img'] = url;\n      array.push(obj);\n      return array;\n    }, []);\n  };\n\n  const getDogs = breed => {\n    return axios.get(`https://dog.ceo/api/breed/${breed}/images`).then(res => res.data.message).catch(err => console.error(err));\n  };\n\n  useEffect(() => {\n    if (!!selectedBreeds.length) {\n      setDogs([]);\n      selectedBreeds.map(breed => {\n        getDogs(breed).then(res => {\n          const dogObjects = buildDogObjects(res);\n          setDogs([...dogs, ...dogObjects]);\n        });\n      });\n    }\n  }, [selectedBreeds]);\n  console.log(dogs);\n\n  const onChange = list => {\n    setCheckedList(list);\n    setIndeterminate(!!list.length && list.length < selectedBreeds.length);\n    setCheckAll(list.length === selectedBreeds.length);\n    setFilteredBreeds(list);\n  };\n\n  const onCheckAllChange = e => {\n    setCheckedList(e.target.checked ? selectedBreeds : []);\n    setIndeterminate(false);\n    setCheckAll(e.target.checked);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, selectedBreeds.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Checkbox, {\n    indeterminate: indeterminate,\n    onChange: onCheckAllChange,\n    checked: checkAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(CheckboxGroup, {\n    options: selectedBreeds,\n    value: selectedBreeds,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dog_cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, dogs.length > 0 && dogs.map(dog => {\n    return /*#__PURE__*/React.createElement(DogCard, {\n      key: dog.img,\n      img_url: dog.img,\n      breed: dog.breed,\n      subbreed: dog.subbreed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 20\n      }\n    });\n  })));\n};\n\nexport default Content;","map":{"version":3,"sources":["/home/daniel/Desktop/Hub3/hub3_take_home_challenge/hub3_take_home_challenge/src/components/search/Content.js"],"names":["React","useEffect","useState","Checkbox","Divider","Dogs","axios","DogCard","CheckboxGroup","Group","Content","selectedBreeds","filteredBreeds","setFilteredBreeds","dogs","setDogs","checkedList","setCheckedList","indeterminate","setIndeterminate","checkAll","setCheckAll","buildDogObjects","data","then","res","console","log","reduce","array","imgUrl","url","breed","subbreed","match","obj","push","getDogs","get","message","catch","err","error","length","map","dogObjects","onChange","list","onCheckAllChange","e","target","checked","dog","img"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Checkbox, Divider } from 'antd'\nimport Dogs from './Dogs'\nimport axios from 'axios'\nimport DogCard from './DogCard'\nconst CheckboxGroup = Checkbox.Group\n\nconst Content = ({ selectedBreeds }) => {\n  const [filteredBreeds, setFilteredBreeds] = useState([])\n  const [dogs, setDogs] = useState([])\n  const [checkedList, setCheckedList] = useState([]);\n  const [indeterminate, setIndeterminate] = useState(true);\n  const [checkAll, setCheckAll] = useState(false);\n\n  const buildDogObjects = data => {\n    data.then(res => console.log(res))\n    return data.reduce((array, imgUrl) => {\n      const [url, breed, subbreed] = imgUrl.match(/.*\\/(\\w+)\\-?(\\w*)\\/.*$/)\n      const obj = {}\n      obj['breed'] = breed\n      obj['subbreed'] = subbreed\n      obj['img'] = url\n      array.push(obj)\n      return array\n    }, [])\n  }\n\n  const getDogs = breed => {\n    return axios.get(`https://dog.ceo/api/breed/${breed}/images`)\n      .then(res => res.data.message)\n      .catch(err => console.error(err))\n  }\n\n\n  useEffect(() => {\n    if (!!selectedBreeds.length) {\n      setDogs([])\n      selectedBreeds.map(breed => {\n        getDogs(breed).then(res => {\n          const dogObjects = buildDogObjects(res)\n          setDogs([...dogs, ...dogObjects])\n        })\n      })\n    }\n  }, [selectedBreeds])\n\n  console.log(dogs)\n  const onChange = list => {\n    setCheckedList(list);\n    setIndeterminate(!!list.length && list.length < selectedBreeds.length);\n    setCheckAll(list.length === selectedBreeds.length);\n    setFilteredBreeds(list)\n  };\n\n  const onCheckAllChange = e => {\n    setCheckedList(e.target.checked ? selectedBreeds : []);\n    setIndeterminate(false);\n    setCheckAll(e.target.checked);\n  };\n\n  return (\n    <div className=\"content\">\n      <div className=\"filter\">\n        {\n          selectedBreeds.length > 0 && <>\n            <Checkbox indeterminate={indeterminate} onChange={onCheckAllChange} checked={checkAll}>All</Checkbox>\n            <CheckboxGroup options={selectedBreeds} value={selectedBreeds} onChange={onChange} />\n          </>\n        }\n      </div>\n      {/* <Dogs breed={breed} /> */}\n      <div className=\"dog_cards\">\n        {\n          dogs.length > 0 && dogs.map(dog => {\n            return <DogCard key={dog.img} img_url={dog.img} breed={dog.breed} subbreed={dog.subbreed} />\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Content\n"]},"metadata":{},"sourceType":"module"}