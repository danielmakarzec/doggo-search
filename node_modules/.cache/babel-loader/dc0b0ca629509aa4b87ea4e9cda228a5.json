{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Desktop/Hub3/hub3_take_home_challenge/hub3_take_home_challenge/src/components/search/Content.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Checkbox, Divider } from 'antd';\nimport Dogs from './Dogs';\nimport axios from 'axios';\nimport DogCard from './DogCard';\nconst CheckboxGroup = Checkbox.Group;\n\nconst Content = ({\n  selectedBreeds\n}) => {\n  const [filteredBreeds, setFilteredBreeds] = useState([]);\n  const [dogs, setDogs] = useState([]);\n  const [checkedList, setCheckedList] = useState([]);\n  const [indeterminate, setIndeterminate] = useState(true);\n  const [checkAll, setCheckAll] = useState(false);\n\n  const buildDogObjects = data => {\n    console.log(data);\n    return data.reduce((array, imgUrl) => {\n      const [url, breed, subbreed] = imgUrl.match(/.*\\/(\\w+)\\-?(\\w*)\\/.*$/);\n      const obj = {};\n      obj['breed'] = breed;\n      obj['subbreed'] = subbreed;\n      obj['img'] = url;\n      array.push(obj);\n      return array;\n    }, []);\n  };\n\n  const getDogs = () => {\n    //   let res = axios.get(`https://dog.ceo/api/breed/${breed}/images`)\n    //   return res.data.message\n    const getRequest = async () => {\n      try {\n        const resp = await axios.get(`https://dog.ceo/api/breed/${breed}/images`);\n        console.log(resp.data);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    return selectedBreeds.map(breed => {\n      getRequest();\n    });\n  };\n\n  useEffect(() => {\n    if (!!selectedBreeds.length) {\n      const allBreedImages = getDogs();\n      const dogObjects = buildDogObjects(allBreedImages);\n      setDogs(...dogObjects);\n    }\n  }, [selectedBreeds]);\n  console.log(dogs);\n\n  const onChange = list => {\n    setCheckedList(list);\n    setIndeterminate(!!list.length && list.length < selectedBreeds.length);\n    setCheckAll(list.length === selectedBreeds.length);\n    setFilteredBreeds(list);\n  };\n\n  const onCheckAllChange = e => {\n    setCheckedList(e.target.checked ? selectedBreeds : []);\n    setIndeterminate(false);\n    setCheckAll(e.target.checked);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, selectedBreeds.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Checkbox, {\n    indeterminate: indeterminate,\n    onChange: onCheckAllChange,\n    checked: checkAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(CheckboxGroup, {\n    options: selectedBreeds,\n    value: selectedBreeds,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dog_cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, dogs.length > 0 && dogs.map(dog => {\n    return /*#__PURE__*/React.createElement(DogCard, {\n      key: dog.img,\n      img_url: dog.img,\n      breed: dog.breed,\n      subbreed: dog.subbreed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 20\n      }\n    });\n  })));\n};\n\nexport default Content;","map":{"version":3,"sources":["/home/daniel/Desktop/Hub3/hub3_take_home_challenge/hub3_take_home_challenge/src/components/search/Content.js"],"names":["React","useEffect","useState","Checkbox","Divider","Dogs","axios","DogCard","CheckboxGroup","Group","Content","selectedBreeds","filteredBreeds","setFilteredBreeds","dogs","setDogs","checkedList","setCheckedList","indeterminate","setIndeterminate","checkAll","setCheckAll","buildDogObjects","data","console","log","reduce","array","imgUrl","url","breed","subbreed","match","obj","push","getDogs","getRequest","resp","get","err","error","map","length","allBreedImages","dogObjects","onChange","list","onCheckAllChange","e","target","checked","dog","img"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Checkbox, Divider } from 'antd'\nimport Dogs from './Dogs'\nimport axios from 'axios'\nimport DogCard from './DogCard'\nconst CheckboxGroup = Checkbox.Group\n\nconst Content = ({ selectedBreeds }) => {\n  const [filteredBreeds, setFilteredBreeds] = useState([])\n  const [dogs, setDogs] = useState([])\n  const [checkedList, setCheckedList] = useState([]);\n  const [indeterminate, setIndeterminate] = useState(true);\n  const [checkAll, setCheckAll] = useState(false);\n\n  const buildDogObjects = data => {\n    console.log(data)\n    return data.reduce((array, imgUrl) => {\n      const [url, breed, subbreed] = imgUrl.match(/.*\\/(\\w+)\\-?(\\w*)\\/.*$/)\n      const obj = {}\n      obj['breed'] = breed\n      obj['subbreed'] = subbreed\n      obj['img'] = url\n      array.push(obj)\n      return array\n    }, [])\n  }\n\n  const getDogs = () => {\n    //   let res = axios.get(`https://dog.ceo/api/breed/${breed}/images`)\n    //   return res.data.message\n    const getRequest = async () => {\n      try {\n        const resp = await axios.get(`https://dog.ceo/api/breed/${breed}/images`);\n        console.log(resp.data);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    return selectedBreeds.map((breed) => {\n      getRequest();\n    })\n  }\n\n  useEffect(() => {\n    if (!!selectedBreeds.length) {\n      const allBreedImages = getDogs()\n      const dogObjects = buildDogObjects(allBreedImages)\n      setDogs(...dogObjects)\n    }\n\n  }, [selectedBreeds])\n\n  console.log(dogs)\n  const onChange = list => {\n    setCheckedList(list);\n    setIndeterminate(!!list.length && list.length < selectedBreeds.length);\n    setCheckAll(list.length === selectedBreeds.length);\n    setFilteredBreeds(list)\n  };\n\n  const onCheckAllChange = e => {\n    setCheckedList(e.target.checked ? selectedBreeds : []);\n    setIndeterminate(false);\n    setCheckAll(e.target.checked);\n  };\n\n  return (\n    <div className=\"content\">\n      <div className=\"filter\">\n        {\n          selectedBreeds.length > 0 && <>\n            <Checkbox indeterminate={indeterminate} onChange={onCheckAllChange} checked={checkAll}>All</Checkbox>\n            <CheckboxGroup options={selectedBreeds} value={selectedBreeds} onChange={onChange} />\n          </>\n        }\n      </div>\n      {/* <Dogs breed={breed} /> */}\n      <div className=\"dog_cards\">\n        {\n          dogs.length > 0 && dogs.map(dog => {\n            return <DogCard key={dog.img} img_url={dog.img} breed={dog.breed} subbreed={dog.subbreed} />\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Content\n"]},"metadata":{},"sourceType":"module"}