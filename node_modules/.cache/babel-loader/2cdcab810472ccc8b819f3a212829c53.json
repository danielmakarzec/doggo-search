{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Desktop/Hub3/hub3_take_home_challenge/hub3_take_home_challenge/src/components/search/Content.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Checkbox, Divider, Tree } from 'antd';\nimport Dogs from './Dogs';\nimport axios from 'axios';\nimport DogCard from './DogCard';\nconst CheckboxGroup = Checkbox.Group;\n\nconst Content = ({\n  selectedBreeds\n}) => {\n  const [filteredBreeds, setFilteredBreeds] = useState(selectedBreeds);\n  const [dogs, setDogs] = useState([]);\n\n  const buildDogObjects = data => {\n    return data.reduce((array, imgUrl) => {\n      const [url, breed, subbreed] = imgUrl.match(/.*\\/(\\w+)\\-?(\\w*)\\/.*$/);\n      const obj = {};\n      obj['name'] = !!subbreed ? subbreed : breed;\n      obj['breed'] = breed;\n      obj['subbreed'] = subbreed;\n      obj['img'] = url;\n      array.push(obj);\n      return array;\n    }, []);\n  };\n\n  const getDogs = breeds => {\n    const requests = !!breeds.length ? breeds.map(breed => axios.get(`https://dog.ceo/api/breed/${breed}/images`)) : [axios.get(`https://dog.ceo/api/breeds/image/random/12`)];\n    return axios.all([...requests]).then(res => {\n      const dogs = res.map(r => r.data.message);\n      return dogs.flat();\n    }).catch(err => console.error(err));\n  };\n\n  useEffect(() => {\n    getDogs(selectedBreeds).then(res => {\n      const dogObjects = buildDogObjects(res);\n      setDogs(dogObjects);\n    });\n  }, [selectedBreeds]);\n  console.log(filteredBreeds);\n  const treeData = [{\n    title: 'All',\n    key: 'all',\n    children: [{\n      title: 'parent1',\n      key: '0-0-0',\n      children: [{\n        title: 'leaf',\n        key: '0-0-0-0'\n      }, {\n        title: 'leaf',\n        key: '0-0-0-1'\n      }]\n    }]\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, selectedBreeds.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tree, {\n    checkable: true,\n    defaultExpandedKeys: ['0-0-0', '0-0-1'],\n    defaultSelectedKeys: ['0-0-0', '0-0-1'],\n    defaultCheckedKeys: ['0-0-0', '0-0-1'],\n    onSelect: onSelect,\n    onCheck: onCheck,\n    treeData: treeData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dog_cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, dogs.length > 0 && dogs.map(dog => {\n    return /*#__PURE__*/React.createElement(DogCard, {\n      key: dog.img,\n      img_url: dog.img,\n      breed: dog.breed,\n      subbreed: dog.subbreed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 20\n      }\n    });\n  })));\n};\n\nexport default Content;","map":{"version":3,"sources":["/home/daniel/Desktop/Hub3/hub3_take_home_challenge/hub3_take_home_challenge/src/components/search/Content.js"],"names":["React","useEffect","useState","Checkbox","Divider","Tree","Dogs","axios","DogCard","CheckboxGroup","Group","Content","selectedBreeds","filteredBreeds","setFilteredBreeds","dogs","setDogs","buildDogObjects","data","reduce","array","imgUrl","url","breed","subbreed","match","obj","push","getDogs","breeds","requests","length","map","get","all","then","res","r","message","flat","catch","err","console","error","dogObjects","log","treeData","title","key","children","onSelect","onCheck","dog","img"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Checkbox, Divider, Tree } from 'antd'\nimport Dogs from './Dogs'\nimport axios from 'axios'\nimport DogCard from './DogCard'\nconst CheckboxGroup = Checkbox.Group\n\nconst Content = ({ selectedBreeds }) => {\n  const [filteredBreeds, setFilteredBreeds] = useState(selectedBreeds)\n  const [dogs, setDogs] = useState([])\n\n  const buildDogObjects = data => {\n    return data.reduce((array, imgUrl) => {\n      const [url, breed, subbreed] = imgUrl.match(/.*\\/(\\w+)\\-?(\\w*)\\/.*$/)\n      const obj = {}\n      obj['name'] = !!subbreed ? subbreed : breed\n      obj['breed'] = breed\n      obj['subbreed'] = subbreed\n      obj['img'] = url\n      array.push(obj)\n      return array\n    }, [])\n  }\n\n  const getDogs = breeds => {\n    const requests = !!breeds.length\n      ? breeds.map(breed => axios.get(`https://dog.ceo/api/breed/${breed}/images`))\n      : [axios.get(`https://dog.ceo/api/breeds/image/random/12`)]\n\n    return axios.all([...requests])\n      .then(res => {\n        const dogs = res.map(r => r.data.message)\n        return dogs.flat()\n      })\n      .catch(err => console.error(err))\n  }\n\n  useEffect(() => {\n    getDogs(selectedBreeds)\n      .then(res => {\n        const dogObjects = buildDogObjects(res)\n        setDogs(dogObjects)\n      })\n  }, [selectedBreeds])\n\n  console.log(filteredBreeds)\n\n  const treeData = [\n    {\n      title: 'All',\n      key: 'all',\n      children: [\n        {\n          title: 'parent1',\n          key: '0-0-0',\n          children: [\n            {\n              title: 'leaf',\n              key: '0-0-0-0',\n            },\n            {\n              title: 'leaf',\n              key: '0-0-0-1',\n            }\n          ],\n        }\n      ]\n    }\n  ]\n\n  return (\n    <div className=\"content\" >\n      <div className=\"filter\">\n        {\n          selectedBreeds.length > 0 && <>\n            <Tree\n              checkable\n              defaultExpandedKeys={['0-0-0', '0-0-1']}\n              defaultSelectedKeys={['0-0-0', '0-0-1']}\n              defaultCheckedKeys={['0-0-0', '0-0-1']}\n              onSelect={onSelect}\n              onCheck={onCheck}\n              treeData={treeData}\n            />\n          </>\n        }\n      </div>\n      {/* <Dogs breed={breed} /> */}\n      <div className=\"dog_cards\" >\n        {\n          dogs.length > 0 && dogs.map(dog => {\n            return <DogCard key={dog.img} img_url={dog.img} breed={dog.breed} subbreed={dog.subbreed} />\n          })\n        }\n      </div >\n    </div >\n  )\n}\n\nexport default Content\n"]},"metadata":{},"sourceType":"module"}