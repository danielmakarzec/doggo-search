{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Desktop/Hub3/hub3_take_home_challenge/hub3_take_home_challenge/src/components/search/Content.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Checkbox, Divider } from 'antd';\nimport Dogs from './Dogs';\nimport axios from 'axios';\nimport DogCard from './DogCard';\nconst CheckboxGroup = Checkbox.Group;\n\nconst Content = ({\n  selectedBreeds\n}) => {\n  const [filteredBreeds, setFilteredBreeds] = useState([]);\n  const [dogs, setDogs] = useState([]);\n  const [checkedList, setCheckedList] = useState([]);\n  const [indeterminate, setIndeterminate] = useState(true);\n  const [checkAll, setCheckAll] = useState(false); // console.log({ checkedList })\n\n  useEffect(() => {\n    const getDogs = () => {\n      selectedBreeds.map(async breed => {\n        let res = await axios.get(`https://dog.ceo/api/breed/${breed}/images`);\n        let subBreeds = res.data.message;\n        let treeData = subBreeds.reduce((array, img) => {\n          const [url, breed, subbreed] = img.match(/.*\\/(\\w+)\\-?(\\w*)\\/.*$/);\n          const obj = {};\n          obj['breed'] = breed;\n          obj['subbreed'] = subbreed;\n          obj['img'] = url;\n          array.push(obj);\n          return array;\n        }, []); // if (subBreeds.length === 0) {\n        //   let resp = await axios.get(`https://dog.ceo/api/breed/${breed}/images`)\n        //   const data = resp.data.message\n        //   setDogs([...dogs, ...data])\n        // } else {\n        //   subBreeds.forEach(async (subBreed) => {\n        //     let resp = await axios.get(`https://dog.ceo/api/breed/${breed}/${subBreed}/images`)\n        //     const data = resp.data.message\n        //     setDogs([...dogs, ...data])\n        //   })\n        // }\n      });\n    }; // setFilteredBreeds(selectedBreeds)\n    // setCheckedList(selectedBreeds)\n    // console.log('in useEffect')\n\n\n    getDogs();\n  }, [selectedBreeds]);\n\n  const onChange = list => {\n    setCheckedList(list);\n    setIndeterminate(!!list.length && list.length < selectedBreeds.length);\n    setCheckAll(list.length === selectedBreeds.length);\n    setFilteredBreeds(list);\n  };\n\n  const onCheckAllChange = e => {\n    setCheckedList(e.target.checked ? selectedBreeds : []);\n    setIndeterminate(false);\n    setCheckAll(e.target.checked);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, selectedBreeds.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Checkbox, {\n    indeterminate: indeterminate,\n    onChange: onCheckAllChange,\n    checked: checkAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(CheckboxGroup, {\n    options: selectedBreeds,\n    value: selectedBreeds,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dog_cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, dogs.length > 0 && dogs.map(dog => {\n    return /*#__PURE__*/React.createElement(DogCard, {\n      key: dog,\n      img_url: dog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 20\n      }\n    });\n  })));\n};\n\nexport default Content;","map":{"version":3,"sources":["/home/daniel/Desktop/Hub3/hub3_take_home_challenge/hub3_take_home_challenge/src/components/search/Content.js"],"names":["React","useEffect","useState","Checkbox","Divider","Dogs","axios","DogCard","CheckboxGroup","Group","Content","selectedBreeds","filteredBreeds","setFilteredBreeds","dogs","setDogs","checkedList","setCheckedList","indeterminate","setIndeterminate","checkAll","setCheckAll","getDogs","map","breed","res","get","subBreeds","data","message","treeData","reduce","array","img","url","subbreed","match","obj","push","onChange","list","length","onCheckAllChange","e","target","checked","dog"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Checkbox, Divider } from 'antd'\nimport Dogs from './Dogs'\nimport axios from 'axios'\nimport DogCard from './DogCard'\nconst CheckboxGroup = Checkbox.Group\n\nconst Content = ({ selectedBreeds }) => {\n  const [filteredBreeds, setFilteredBreeds] = useState([])\n  const [dogs, setDogs] = useState([])\n  const [checkedList, setCheckedList] = useState([]);\n  const [indeterminate, setIndeterminate] = useState(true);\n  const [checkAll, setCheckAll] = useState(false);\n  // console.log({ checkedList })\n\n  useEffect(() => {\n    const getDogs = () => {\n      selectedBreeds.map(async (breed) => {\n        let res = await axios.get(`https://dog.ceo/api/breed/${breed}/images`)\n        let subBreeds = res.data.message\n        let treeData = subBreeds.reduce((array, img) => {\n          const [url, breed, subbreed] = img.match(/.*\\/(\\w+)\\-?(\\w*)\\/.*$/)\n          const obj = {}\n          obj['breed'] = breed\n          obj['subbreed'] = subbreed\n          obj['img'] = url\n          array.push(obj)\n          return array\n        }, [])\n\n        // if (subBreeds.length === 0) {\n        //   let resp = await axios.get(`https://dog.ceo/api/breed/${breed}/images`)\n        //   const data = resp.data.message\n        //   setDogs([...dogs, ...data])\n        // } else {\n        //   subBreeds.forEach(async (subBreed) => {\n        //     let resp = await axios.get(`https://dog.ceo/api/breed/${breed}/${subBreed}/images`)\n        //     const data = resp.data.message\n        //     setDogs([...dogs, ...data])\n        //   })\n        // }\n      })\n    }\n\n    // setFilteredBreeds(selectedBreeds)\n    // setCheckedList(selectedBreeds)\n    // console.log('in useEffect')\n    getDogs()\n  }, [selectedBreeds])\n\n  const onChange = list => {\n    setCheckedList(list);\n    setIndeterminate(!!list.length && list.length < selectedBreeds.length);\n    setCheckAll(list.length === selectedBreeds.length);\n    setFilteredBreeds(list)\n  };\n\n  const onCheckAllChange = e => {\n    setCheckedList(e.target.checked ? selectedBreeds : []);\n    setIndeterminate(false);\n    setCheckAll(e.target.checked);\n  };\n\n  return (\n    <div className=\"content\">\n      <div className=\"filter\">\n        {\n          selectedBreeds.length > 0 && <>\n            <Checkbox indeterminate={indeterminate} onChange={onCheckAllChange} checked={checkAll}>All</Checkbox>\n            <CheckboxGroup options={selectedBreeds} value={selectedBreeds} onChange={onChange} />\n          </>\n        }\n      </div>\n      {/* <Dogs breed={breed} /> */}\n      <div className=\"dog_cards\">\n        {\n          dogs.length > 0 && dogs.map(dog => {\n            return <DogCard key={dog} img_url={dog} />\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Content\n"]},"metadata":{},"sourceType":"module"}