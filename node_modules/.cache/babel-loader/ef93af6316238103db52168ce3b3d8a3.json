{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Desktop/Hub3/hub3_take_home_challenge/hub3_take_home_challenge/src/components/search/Content.js\";\nimport React, { useEffect, useState } from 'react';\nimport Dogs from './Dogs';\nimport axios from 'axios';\nimport DogCard from './DogCard';\nimport Filter from './Filter';\n\nconst Content = ({\n  selectedBreeds\n}) => {\n  const [filteredBreeds, setFilteredBreeds] = useState(selectedBreeds);\n  const [dogs, setDogs] = useState([]); // const [ready, setReady] = useState(false)\n\n  const buildDogObjects = data => {\n    return data.reduce((array, imgUrl) => {\n      const [url, breed, subbreed] = imgUrl.match(/.*\\/(\\w+)\\-?(\\w*)\\/.*$/);\n      const obj = {};\n      obj['name'] = !!subbreed ? subbreed : breed;\n      obj['breed'] = breed;\n      obj['subbreed'] = subbreed;\n      obj['img'] = url;\n      array.push(obj);\n      return array;\n    }, []);\n  };\n\n  const getDogs = breeds => {\n    const requests = !!breeds.length ? breeds.map(breed => axios.get(`https://dog.ceo/api/breed/${breed}/images`)) : [axios.get(`https://dog.ceo/api/breeds/image/random/12`)];\n    return axios.all([...requests]).then(res => {\n      const dogs = res.map(r => r.data.message);\n      return dogs.flat();\n    }).catch(err => console.error(err));\n  };\n\n  useEffect(() => {\n    getDogs(selectedBreeds).then(res => {\n      const dogObjects = buildDogObjects(res);\n      setDogs(dogObjects); // setReady(true)\n    });\n  }, [selectedBreeds]); // console.log(filteredBreeds)\n\n  const filterChange = list => {\n    let newList = [];\n    list.map(breed => {\n      const dog = dogs.find(dog => dog.breed === breed);\n      !!dog && newList.push(dog);\n    });\n    setFilteredBreeds(newList);\n  }; // setFilteredBreeds(value)\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Filter, {\n    selectedBreeds: selectedBreeds,\n    dogs: dogs,\n    filterChange: filterChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dog_cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, filteredBreeds.map(dog => {\n    return /*#__PURE__*/React.createElement(DogCard, {\n      key: dog.img,\n      img_url: dog.img,\n      breed: dog.breed,\n      subbreed: dog.subbreed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 20\n      }\n    });\n  })));\n};\n\nexport default Content;","map":{"version":3,"sources":["/home/daniel/Desktop/Hub3/hub3_take_home_challenge/hub3_take_home_challenge/src/components/search/Content.js"],"names":["React","useEffect","useState","Dogs","axios","DogCard","Filter","Content","selectedBreeds","filteredBreeds","setFilteredBreeds","dogs","setDogs","buildDogObjects","data","reduce","array","imgUrl","url","breed","subbreed","match","obj","push","getDogs","breeds","requests","length","map","get","all","then","res","r","message","flat","catch","err","console","error","dogObjects","filterChange","list","newList","dog","find","img"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Dogs from './Dogs'\nimport axios from 'axios'\nimport DogCard from './DogCard'\nimport Filter from './Filter'\n\nconst Content = ({ selectedBreeds }) => {\n  const [filteredBreeds, setFilteredBreeds] = useState(selectedBreeds)\n  const [dogs, setDogs] = useState([])\n  // const [ready, setReady] = useState(false)\n\n  const buildDogObjects = data => {\n    return data.reduce((array, imgUrl) => {\n      const [url, breed, subbreed] = imgUrl.match(/.*\\/(\\w+)\\-?(\\w*)\\/.*$/)\n      const obj = {}\n      obj['name'] = !!subbreed ? subbreed : breed\n      obj['breed'] = breed\n      obj['subbreed'] = subbreed\n      obj['img'] = url\n      array.push(obj)\n      return array\n    }, [])\n  }\n\n  const getDogs = breeds => {\n    const requests = !!breeds.length\n      ? breeds.map(breed => axios.get(`https://dog.ceo/api/breed/${breed}/images`))\n      : [axios.get(`https://dog.ceo/api/breeds/image/random/12`)]\n\n    return axios.all([...requests])\n      .then(res => {\n        const dogs = res.map(r => r.data.message)\n        return dogs.flat()\n      })\n      .catch(err => console.error(err))\n  }\n\n  useEffect(() => {\n    getDogs(selectedBreeds)\n      .then(res => {\n        const dogObjects = buildDogObjects(res)\n        setDogs(dogObjects)\n        // setReady(true)\n      })\n  }, [selectedBreeds])\n\n  // console.log(filteredBreeds)\n\n  const filterChange = list => {\n    let newList = []\n\n    list.map(breed => {\n      const dog = dogs.find(dog => dog.breed === breed)\n      !!dog && newList.push(dog)\n    })\n\n    setFilteredBreeds(newList)\n  }\n  // setFilteredBreeds(value)\n\n  return (\n    <div className=\"content\" >\n      <div className=\"filter\">\n        <Filter selectedBreeds={selectedBreeds} dogs={dogs} filterChange={filterChange} />\n      </div>\n      {/* <Dogs breed={breed} /> */}\n      <div className=\"dog_cards\" >\n        {\n          filteredBreeds.map(dog => {\n            return <DogCard key={dog.img} img_url={dog.img} breed={dog.breed} subbreed={dog.subbreed} />\n          })\n        }\n      </div >\n    </div >\n  )\n}\n\nexport default Content\n"]},"metadata":{},"sourceType":"module"}